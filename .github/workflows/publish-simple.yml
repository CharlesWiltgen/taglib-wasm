name: Simple Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
      
      - name: Install jq for JSON manipulation
        run: sudo apt-get update && sudo apt-get install -y jq
      
      - name: Verify files exist
        run: |
          echo "=== Repository contents ==="
          ls -la
          echo "=== Build directory ==="
          ls -la build/
          echo "=== WASM files ==="
          ls -la build/*.wasm build/*.js || echo "WASM files not found"
      
      - name: Update version (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Update package.json version
          jq '.version = "${{ github.event.inputs.version }}"' package.json > package.tmp.json
          mv package.tmp.json package.json
          
          # Update deno.json version
          jq '.version = "${{ github.event.inputs.version }}"' deno.json > deno.tmp.json
          mv deno.tmp.json deno.json
          
          echo "Updated versions to ${{ github.event.inputs.version }}"
      
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
      
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
      
      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create GitHub-specific package.json
          jq '.name = "@charleswiltgen/taglib-wasm" | .publishConfig.registry = "https://npm.pkg.github.com"' package.json > package.github.json
          
          # Backup and replace
          cp package.json package.backup.json
          mv package.github.json package.json
          
          # Publish
          npm publish
          
          # Restore
          mv package.backup.json package.json
      
      - name: Publish to JSR
        run: deno publish