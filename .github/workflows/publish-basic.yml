name: Publish Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x
      - run: deno task test --no-lock || echo "Tests failed but continuing"

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Update version (if manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Check current version first
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            # Update deno.json version too
            sed -i 's/"version": "[^"]*"/"version": "${{ github.event.inputs.version }}"/' deno.json
          else
            echo "Version already set to ${{ github.event.inputs.version }}"
          fi

      - name: Check if package exists on npm
        id: check_npm
        run: |
          if npm view taglib-wasm version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - run: npm publish --access public
        if: steps.check_npm.outputs.exists == 'false' || github.event_name == 'release'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Update package for GitHub Packages
        run: |
          # Update package name for GitHub Packages (must be lowercase and scoped)
          sed -i 's/"name": "[^"]*"/"name": "@charleswiltgen\/taglib-wasm"/' package.json

          # Update repository.url to remove git+ prefix (GitHub Packages requirement)
          sed -i 's/"url": "git+https:/"url": "https:/' package.json

          # Update version if manual trigger
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
              sed -i 's/"version": "[^"]*"/"version": "${{ github.event.inputs.version }}"/' package.json
            else
              echo "Version already set to ${{ github.event.inputs.version }}"
            fi
          fi

          # Remove publishConfig that points to npmjs
          sed -i '/"publishConfig":/,/}/d' package.json
          
          # Debug: Show the modified package.json
          echo "Modified package.json:"
          cat package.json | jq .

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Debug npm config
        run: |
          echo "NPM config:"
          npm config list
          echo "Registry:"
          npm config get registry

      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ github.token }}

  publish-jsr:
    # Publish to JSR (jsr.io) using OIDC, not Denoland
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Update version (if manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          sed -i 's/"version": "[^"]*"/"version": "${{ github.event.inputs.version }}"/' deno.json
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deno.json
          git commit -m "chore: update version to ${{ github.event.inputs.version }}" || true

      - run: deno publish