name: SonarCloud Analysis

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Fix coverage paths for SonarCloud
        run: |
          # SonarCloud expects relative paths in lcov files
          sed -i 's|SF:/Users/.*/taglib-wasm/|SF:|g' coverage.lcov || true
          sed -i 's|SF:.*/taglib-wasm/|SF:|g' coverage.lcov || true
          # Move to expected location
          mkdir -p coverage
          mv coverage.lcov coverage/lcov.info

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Generate test execution report
        run: |
          # Generate SonarQube test execution report
          ./scripts/generate-sonar-test-report.ts || echo "Failed to generate test report"

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/test-utils.ts,**/examples/**,**/scripts/**,**/tools/**,**/lib/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.testExecutionReportPaths=test-results-sonar.xml
