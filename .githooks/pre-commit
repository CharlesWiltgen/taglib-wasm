#!/bin/bash

# Pre-commit hook to ensure deno.json and package.json versions are in sync

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Checking version synchronization..."

# Extract versions
PACKAGE_VERSION=$(grep -E '"version"' package.json | sed -E 's/.*"version": "([^"]+)".*/\1/')
DENO_VERSION=$(grep -E '"version"' deno.json | sed -E 's/.*"version": "([^"]+)".*/\1/')

# Check if files exist
if [ ! -f "package.json" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: package.json not found${NC}"
    exit 0
fi

if [ ! -f "deno.json" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: deno.json not found${NC}"
    exit 0
fi

# Compare versions
if [ "$PACKAGE_VERSION" != "$DENO_VERSION" ]; then
    echo -e "${RED}‚ùå Version mismatch detected!${NC}"
    echo -e "   package.json: ${YELLOW}$PACKAGE_VERSION${NC}"
    echo -e "   deno.json:    ${YELLOW}$DENO_VERSION${NC}"
    echo ""
    echo -e "${YELLOW}To fix this, run one of:${NC}"
    echo "  deno task version:patch  # Increment patch version"
    echo "  deno task version:minor  # Increment minor version"
    echo "  deno task version:major  # Increment major version"
    echo "  deno task version:set <version>  # Set specific version"
    echo ""
    echo -e "${RED}Commit aborted.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Versions are in sync: $PACKAGE_VERSION${NC}"

# Check if either version file is staged
if git diff --cached --name-only | grep -E "(package\.json|deno\.json)" > /dev/null; then
    # Double-check that both files have the same version in staged changes
    STAGED_PACKAGE_VERSION=$(git show :package.json 2>/dev/null | grep -E '"version"' | sed -E 's/.*"version": "([^"]+)".*/\1/')
    STAGED_DENO_VERSION=$(git show :deno.json 2>/dev/null | grep -E '"version"' | sed -E 's/.*"version": "([^"]+)".*/\1/')
    
    if [ -n "$STAGED_PACKAGE_VERSION" ] && [ -n "$STAGED_DENO_VERSION" ]; then
        if [ "$STAGED_PACKAGE_VERSION" != "$STAGED_DENO_VERSION" ]; then
            echo -e "${RED}‚ùå Staged files have version mismatch!${NC}"
            echo -e "   Staged package.json: ${YELLOW}$STAGED_PACKAGE_VERSION${NC}"
            echo -e "   Staged deno.json:    ${YELLOW}$STAGED_DENO_VERSION${NC}"
            echo ""
            echo -e "${YELLOW}Both files must be staged with the same version.${NC}"
            exit 1
        fi
    fi
fi

exit 0